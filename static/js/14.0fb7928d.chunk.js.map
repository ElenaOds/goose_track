{"version":3,"file":"static/js/14.0fb7928d.chunk.js","mappings":";mPAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAhB,YCDnC,EAAwB,+BAAxB,EAAuE,uCAAvE,EAA2H,8CC8B3H,EA1BwB,WAEtB,OAA0BC,EAAAA,EAAAA,UAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAAIG,MAAnD,eAAOC,EAAP,KAAoBC,EAApB,KAcE,OACA,iBAAKC,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,UAAmCC,EAAAA,EAAAA,GAAOJ,EAAa,gBACvD,mBAAQK,KAAK,SAASH,UAAaC,EAAsBG,QAdrC,WACtBL,GAAe,SAACM,GAAD,OAAeC,EAAAA,EAAAA,GAAUD,GAAY,EAArC,IACfT,EAASD,EAAQ,EAElB,EAUG,mBACA,mBAAQQ,KAAK,SAASH,UAAaC,EAAsBG,QAVpC,WACvBL,GAAe,SAACM,GAAD,OAAeC,EAAAA,EAAAA,GAAUD,EAAW,EAApC,IAEfT,EAASD,EAAQ,EAClB,EAMG,qBAGL,YC5BD,EAAyC,iDAAzC,EAAqG,mCAArG,EAAiJ,iCCsBjJ,EAnByB,WAErB,IAAMG,GAAcI,EAAAA,EAAAA,GAAOL,KAAKU,MAAO,QACjCC,GAAaN,EAAAA,EAAAA,GAAOL,KAAKU,MAAO,cAEhCE,EAAiB,SAAC,GACpB,OADqC,EAAfC,UACJ,SAAC,KAAD,CAAUC,GAAE,0BAAqBb,GAAec,SAAO,KAAM,SAAC,KAAD,CAAUD,GAAE,wBAAmBH,GAAcI,SAAO,GACpI,EAIL,OACE,iBAAKZ,UAAWC,EAAhB,WACA,mBAAQD,UAAWC,EAAnB,UAAoC,SAAC,EAAAY,QAAD,CAASF,GAAE,0BAAqBb,GAAeE,UAAWS,EAA1D,sBACpC,mBAAQT,UAAWC,EAAnB,UAAkC,SAAC,EAAAY,QAAD,CAAUF,GAAE,wBAAmBH,GAAcR,UAAWS,EAAxD,qBAGrC,ECpBD,EAA0B,iCCa1B,EAVwB,WAEpB,OACI,iBAAKT,UAAWC,EAAhB,WACA,SAAC,EAAD,KACA,SAAC,EAAD,MAGP,ECXD,EAA4B,4BC4C5B,EApCiB,WACf,IAAMa,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXnB,EAAcD,KAAKU,MACnBW,GAAuBhB,EAAAA,EAAAA,GAAOJ,EAAa,QAE3CqB,GAAQjB,EAAAA,EAAAA,GAAOJ,EAAa,cAC5Ba,GAAKT,EAAAA,EAAAA,IAAOI,EAAAA,EAAAA,GAAUR,EAAa,GAAI,eAE/CsB,EAAAA,EAAAA,YAAU,WACRJ,EAAS,mBAAD,OAAoBE,GAC7B,GAAE,CAACF,EAASE,KAEXE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,CACXF,KAAAA,EACAR,GAAAA,GAEFW,QAAQC,IAAI,SAAUF,GACtBP,GAASU,EAAAA,EAAAA,IAAIH,GACd,GAAE,CAACP,EAAUK,EAAMR,IAEpB,IAAMc,GAASC,EAAAA,EAAAA,IAAYpC,GAG3B,OAFAgC,QAAQC,IAAI,WAAYE,IAGtB,iBAAKzB,UAAWC,EAAhB,WACG,SAAC,EAAD,KACA,SAAC,EAAA0B,SAAD,CAAUC,SAAU,KAApB,UACC,SAAC,KAAD,QAIP","sources":["redux/tasks/tasks.selectors.js","webpack://react-homework-template/./src/components/PeriodPaginator/PeriodPaginator.module.css?edee","components/PeriodPaginator/PeriodPaginator.js","webpack://react-homework-template/./src/components/PeriodTypeSelect/PeriodTypeSelect.module.css?d6f7","components/PeriodTypeSelect/PeriodTypeSelect.js","webpack://react-homework-template/./src/components/CalendarToolbar/CalendarToolbar.module.css?1eb8","components/CalendarToolbar/CalendarToolbar.js","webpack://react-homework-template/./src/pages/Calendar/Calendar.module.css?fd4e","pages/Calendar/Calendar.js"],"sourcesContent":["export const selectIsLoadingTask = state => state.tasks.isLoading;\n\nexport const selectTaskList = state => state.tasks.taskList;\n","// extracted by mini-css-extract-plugin\nexport default {\"month\":\"PeriodPaginator_month__kj6zj\",\"month_buttons\":\"PeriodPaginator_month_buttons__+PT8S\",\"month_name\":\"PeriodPaginator_month_name__C35wH\"};","import {  addMonths,format } from \"date-fns\";\nimport { useState } from \"react\";\n\n\nimport styles from './PeriodPaginator.module.css'\nconst PeriodPaginator = () => {\n        \n  const [month, setMonth] = useState(0); //! take out\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  \n  const handleLeftClick = () => {\n    setCurrentDate((prevMonth) => addMonths(prevMonth, -1));\n    setMonth(month - 1)\n    \n  }\n  const handleRightClick = () => {\n    setCurrentDate((prevMonth) => addMonths(prevMonth, +1));\n\n    setMonth(month + 1)\n  }\n    \n    return (\n    <div className={styles.month}>\n      <h1 className={styles.month_name}>{format(currentDate, 'LLLL yyyy')}</h1>\n      <button type='button' className = {styles.month_buttons} onClick ={handleLeftClick} >left</button>\n      <button type='button' className = {styles.month_buttons} onClick ={handleRightClick}>rigth</button>\n    </div>\n    );\n};\n\nexport default PeriodPaginator;","// extracted by mini-css-extract-plugin\nexport default {\"PeriodTypeSelectMarkUp\":\"PeriodTypeSelect_PeriodTypeSelectMarkUp__a410w\",\"btnMonth\":\"PeriodTypeSelect_btnMonth__+NbQo\",\"btnDay\":\"PeriodTypeSelect_btnDay__y2as+\",\"text\":\"PeriodTypeSelect_text__Unwz+\"};","import { NavLink, Navigate  } from \"react-router-dom\";\nimport {  format } from \"date-fns\";\nimport styles from \"./PeriodTypeSelect.module.css\"\n\nconst PeriodTypeSelect = () => {\n  \n    const currentDate = format(Date.now(), 'MMMM');\n    const currentDay = format(Date.now(), 'ddMMMMyyyy');\n\n    const getActiveClass = ({ isActive }) => {\n        return isActive ? <Navigate to={`/calendar/month/${currentDate}`} replace /> : <Navigate to={`/calendar/day/${currentDay}`} replace />\n      };\n      \n\n\n  return (   \n    <div className={styles.PeriodTypeSelectMarkUp}>\n    <button className={styles.btnMonth}><NavLink to={`/calendar/month/${currentDate}`} className={getActiveClass}>Month</NavLink></button>\n    <button className={styles.btnDay}><NavLink  to={`/calendar/day/${currentDay}`} className={getActiveClass}>Day</NavLink></button>\n    </div>   \n    )\n}\n\nexport default PeriodTypeSelect;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CalendarToolbar_wrapper__zs0r1\"};","import PeriodPaginator from '../PeriodPaginator/PeriodPaginator';\nimport PeriodTypeSelect from '../PeriodTypeSelect/PeriodTypeSelect';\nimport styles from './CalendarToolbar.module.css'\n\nconst CalendarToolbar = () => {\n\n    return(\n        <div className={styles.wrapper}>\n        <PeriodPaginator/>\n        <PeriodTypeSelect/>\n        </div>\n    )\n}\n\nexport default CalendarToolbar;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Calendar_container__iRRd3\"};","import { addMonths, format } from \"date-fns\";\nimport { useEffect, Suspense} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, Outlet  } from \"react-router-dom\";\nimport { get } from \"redux/tasks/tasks.operations\";\nimport { selectTaskList } from \"redux/tasks/tasks.selectors\";\nimport CalendarToolbar from \"../../components/CalendarToolbar/CalendarToolbar\";\nimport styles from './Calendar.module.css';\n\nconst Calendar = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const currentDate = Date.now();\n  const formattedCurrentDate = format(currentDate, 'MMMM');\n\n  const from  = format(currentDate, \"yyyy-MM-dd\");\n  const to = format(addMonths(currentDate, 1), \"yyyy-MM-dd\")\n  \nuseEffect(() => {\n  navigate(`/calendar/month/${formattedCurrentDate}`);\n}, [navigate,formattedCurrentDate]);\n\n  useEffect(() => {\n    const data = {\n      from,\n      to\n    }\n    console.log('data: ', data);\n    dispatch(get(data));\n  }, [dispatch, from, to]);\n\n  const select = useSelector(selectTaskList);\n  console.log('select: ', select);\n\n  return (\n    <div className={styles.container}>\n       <CalendarToolbar/>  \n       <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Calendar;\n"],"names":["selectTaskList","state","tasks","taskList","useState","month","setMonth","Date","currentDate","setCurrentDate","className","styles","format","type","onClick","prevMonth","addMonths","now","currentDay","getActiveClass","isActive","to","replace","NavLink","dispatch","useDispatch","navigate","useNavigate","formattedCurrentDate","from","useEffect","data","console","log","get","select","useSelector","Suspense","fallback"],"sourceRoot":""}