{"version":3,"file":"static/js/854.cd694b39.chunk.js","mappings":"gOAKaA,EAAkB,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAiB7B,OACE,8BACCA,GAEC,yCAIA,8CA8BP,E,oBC3DD,EAAyC,iDAAzC,EAAwG,sCAAxG,EAA+J,yCAA/J,EAAwN,wCAAxN,EAAmR,2CCItQC,EAAmB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,aAExCC,GAAcC,EAAAA,EAAAA,GAAOC,KAAKC,MAAO,YACjCC,GAAaH,EAAAA,EAAAA,GAAOC,KAAKC,MAAO,cAIxC,OACE,iBAAKE,UAAWC,EAAhB,WACE,SAAC,EAAAC,QAAD,CACEC,QAASV,EACTW,GAAE,0BAAqBT,GACvBK,UAAW,qBAAGK,SACCJ,EAA0BA,CAD9B,EAHb,oBAQA,SAAC,EAAAC,QAAD,CACAC,QAAST,EACTU,GAAE,wBAAmBL,GACrBC,UAAW,qBAAGK,SACGJ,EAAwBA,CAD9B,EAHX,mBAWL,EChCD,EAA0B,iCCa1B,EAVwB,SAAC,GAAiD,IAAhDV,EAA+C,EAA/CA,aAAcE,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,aAEnD,OACI,iBAAKM,UAAWC,EAAhB,WACA,SAACX,EAAD,CAAiBC,aAAcA,KAC/B,SAACC,EAAD,CAAmBC,cAAeA,EAAeC,aAAcA,MAGtE,ECXD,EAA4B,4BCoC5B,EA7BiB,WACf,OAAsCY,EAAAA,EAAAA,WAAS,GAA/C,eAAOf,EAAP,KAAqBgB,EAArB,KAkBF,OACI,iBAAKP,UAAWC,EAAhB,WACG,SAAC,EAAD,CAAiBV,aAAcA,EAAcE,cAN/B,WACnBc,GAAc,EACf,EAIiFb,aAT7D,WACnBa,GAAc,EACf,KAQM,SAAC,EAAAC,SAAD,CAAUC,SAAU,KAApB,UACC,SAAC,KAAD,QAIP,C","sources":["components/PeriodPaginator/PeriodPaginator.js","webpack://react-homework-template/./src/components/PeriodTypeSelect/PeriodTypeSelect.module.css?d6f7","components/PeriodTypeSelect/PeriodTypeSelect.js","webpack://react-homework-template/./src/components/CalendarToolbar/CalendarToolbar.module.css?1eb8","components/CalendarToolbar/CalendarToolbar.js","webpack://react-homework-template/./src/pages/Calendar/Calendar.module.css?fd4e","pages/Calendar/Calendar.js"],"sourcesContent":["// import {  addMonths, format } from \"date-fns\";\n\n// import { useState } from \"react\";\n// import styles from './PeriodPaginator.module.css'\n\nexport const PeriodPaginator = ({isActivePage}) => {\n        \n  // const [month, setMonth] = useState(0); //! take out\n  // const [currentDate, setCurrentDate] = useState(new Date());\n\n  \n  // const handleLeftClick = () => {\n  //   setCurrentDate((prevMonth) => addMonths(prevMonth, -1));\n  //   setMonth(month - 1)\n    \n  // }\n  // const handleRightClick = () => {\n  //   setCurrentDate((prevMonth) => addMonths(prevMonth, +1));\n\n  //   setMonth(month + 1)\n  // }\n    \n    return (\n      <>\n      {isActivePage ? (\n        \n        <h2> Month Year</h2>\n        )\n        : (\n          \n        <h2> Date Month Year</h2>)\n       \n      }\n\n      </>\n\n    // <div className={styles.wrapper}>\n    //   {isActivePage ? (\n    //   <>\n    //   <div>\n    //     <h1 className={styles.month_name}>{format(currentDate, \"MMMM Y\")}</h1>\n    //   </div>\n    //    <div className={styles.buttons}>\n    //   <button type='button' className = {styles.month_buttons} onClick ={handleLeftClick}>left</button>\n    //   <button type='button' className = {styles.month_buttons} onClick ={handleRightClick}>rigth</button>\n    //  </div>\n    //  </>\n    //   )\n    //   : (\n    //     <>\n    //   <div><h1 className={styles.month_name}>{format(currentDate, \"D MMMM Y\")}</h1>\n    //   </div> \n    //   <div className={styles.buttons}>\n    //   <button type='button' className = {styles.month_buttons} onClick ={handleLeftClick}>left</button>\n    //   <button type='button' className = {styles.month_buttons} onClick ={handleRightClick}>rigth</button>\n    //    </div> \n    //    </>\n    //   )}\n    // </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"periodTypeSelectMarkUp\":\"PeriodTypeSelect_periodTypeSelectMarkUp__c+4Wo\",\"navLink_day\":\"PeriodTypeSelect_navLink_day__cZrs0\",\"activeLink_day\":\"PeriodTypeSelect_activeLink_day__h7bxD\",\"navLink_month\":\"PeriodTypeSelect_navLink_month__7FavA\",\"activeLink_month\":\"PeriodTypeSelect_activeLink_month__VaiuX\"};","import { NavLink } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport PropTypes from 'prop-types';\nimport styles from \"./PeriodTypeSelect.module.css\"\n\nexport const PeriodTypeSelect = ({ doActiveMonth, doActiveDate}) => {\n  \n    const currentDate = format(Date.now(), 'MMMMyyyy');\n    const currentDay = format(Date.now(), 'ddMMMMyyyy');\n\n  \n\n  return (   \n    <div className={styles.periodTypeSelectMarkUp}>\n      <NavLink \n        onClick={doActiveMonth}\n        to={`/calendar/month/${currentDate}`} \n        className={({ isActive }) =>\n            isActive ? styles.activeLink_month : styles.navLink_month}\n            >\n        Month\n      </NavLink>\n      <NavLink \n      onClick={doActiveDate}\n      to={`/calendar/day/${currentDay}`} \n      className={({ isActive }) =>\n            isActive ? styles.activeLink_day : styles.navLink_day}\n            >\n        Day\n        </NavLink>\n    </div>   \n    \n    )\n}\n\nPeriodTypeSelect.propTypes = {\n  changePage: PropTypes.array,\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CalendarToolbar_wrapper__zs0r1\"};","import { PeriodPaginator } from '../PeriodPaginator/PeriodPaginator';\nimport { PeriodTypeSelect } from '../PeriodTypeSelect/PeriodTypeSelect';\nimport styles from './CalendarToolbar.module.css'\n\nconst CalendarToolbar = ({isActivePage, doActiveMonth, doActiveDate}) => {\n\n    return(\n        <div className={styles.wrapper}>\n        <PeriodPaginator isActivePage={isActivePage}/>\n        <PeriodTypeSelect  doActiveMonth={doActiveMonth} doActiveDate={doActiveDate}/>\n        </div>\n    )\n}\n\nexport default CalendarToolbar;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Calendar_container__iRRd3\"};","// import { format } from \"date-fns\";\n// import { useEffect, useState, Suspense} from \"react\";\n// import { useNavigate, Outlet  } from \"react-router-dom\";\nimport { useState, Suspense} from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport CalendarToolbar from \"../../components/CalendarToolbar/CalendarToolbar\";\nimport styles from './Calendar.module.css';\n\nconst Calendar = () => {\n  const [isActivePage, setActivePage] = useState(false);\n\n  // const navigate = useNavigate();\n  // const currentDate = Date.now();\n  // const formattedCurrentDate = format(currentDate, 'MMMM');\n\n\n//   useEffect(() => {\n//   navigate(`/calendar/month/${formattedCurrentDate}`);\n// }, [navigate,formattedCurrentDate]);\n  \nconst doActiveDate = () => {\n  setActivePage(false);\n};\nconst doActiveMonth= () => {\n  setActivePage(true);\n};  \n\nreturn (\n    <div className={styles.container}>\n       <CalendarToolbar isActivePage={isActivePage} doActiveMonth={doActiveMonth} doActiveDate={doActiveDate}/>  \n       <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Calendar;\n"],"names":["PeriodPaginator","isActivePage","PeriodTypeSelect","doActiveMonth","doActiveDate","currentDate","format","Date","now","currentDay","className","styles","NavLink","onClick","to","isActive","useState","setActivePage","Suspense","fallback"],"sourceRoot":""}